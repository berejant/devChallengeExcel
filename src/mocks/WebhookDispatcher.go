// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	contracts "devChallengeExcel/contracts"

	mock "github.com/stretchr/testify/mock"
)

// WebhookDispatcher is an autogenerated mock type for the WebhookDispatcher type
type WebhookDispatcher struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *WebhookDispatcher) Close() {
	_m.Called()
}

// GetWebhookUrl provides a mock function with given fields: canonicalSheetId, canonicalCellId
func (_m *WebhookDispatcher) GetWebhookUrl(canonicalSheetId string, canonicalCellId string) string {
	ret := _m.Called(canonicalSheetId, canonicalCellId)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(canonicalSheetId, canonicalCellId)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Notify provides a mock function with given fields: canonicalSheetId, cells
func (_m *WebhookDispatcher) Notify(canonicalSheetId string, cells []*contracts.Cell) {
	_m.Called(canonicalSheetId, cells)
}

// SetWebhookUrl provides a mock function with given fields: canonicalSheetId, canonicalCellId, webhookUrl
func (_m *WebhookDispatcher) SetWebhookUrl(canonicalSheetId string, canonicalCellId string, webhookUrl string) {
	_m.Called(canonicalSheetId, canonicalCellId, webhookUrl)
}

// Start provides a mock function with given fields:
func (_m *WebhookDispatcher) Start() {
	_m.Called()
}

type mockConstructorTestingTNewWebhookDispatcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewWebhookDispatcher creates a new instance of WebhookDispatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWebhookDispatcher(t mockConstructorTestingTNewWebhookDispatcher) *WebhookDispatcher {
	mock := &WebhookDispatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
